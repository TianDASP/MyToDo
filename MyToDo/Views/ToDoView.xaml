<UserControl
    x:Class="MyToDo.Views.ToDoView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converter="clr-namespace:MyToDo.Common.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:MyToDo.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <UserControl.Resources>
        <converter:IntToVisibilityConverter x:Key="IntToVisibilityConverter" />
    </UserControl.Resources>
    <md:DialogHost
        DialogTheme="Inherit"
        Identifier="RootDialog"
        SnackbarMessageQueue="{Binding ElementName=MainSnackbar, Path=MessageQueue}">

        <md:DrawerHost x:Name="drawerHost" IsRightDrawerOpen="{Binding IsRightDrawerOpen}">
            <md:DrawerHost.RightDrawerContent>
                <StackPanel
                    MinWidth="300"
                    MaxWidth="300"
                    Margin="10,5"
                    VerticalAlignment="Stretch">
                    <TextBlock
                        Margin="0,10"
                        FontSize="20"
                        FontWeight="Bold"
                        Text="添加待办" />
                    <StackPanel Orientation="Horizontal">
                        <TextBlock
                            Margin="0,0,0,1"
                            VerticalAlignment="Center"
                            Text="状态：" />
                        <ComboBox
                            Margin="5,0"
                            VerticalAlignment="Center"
                            SelectedIndex="{Binding CurrentSelectedDto.Status}">
                            <!--  这里可能有默认的bool-int转换器 bool-01  -->
                            <ComboBoxItem>待办</ComboBoxItem>
                            <ComboBoxItem>已完成</ComboBoxItem>
                        </ComboBox>
                    </StackPanel>

                    <TextBox
                        Margin="0,5"
                        md:HintAssist.Hint="请输入待办概要"
                        Text="{Binding CurrentSelectedDto.Title}" />
                    <TextBox
                        MinHeight="300"
                        MaxHeight="500"
                        Margin="0,5"
                        VerticalContentAlignment="Top "
                        md:HintAssist.Hint="请输入待办内容"
                        Text="{Binding CurrentSelectedDto.Content}"
                        TextWrapping="Wrap"
                        VerticalScrollBarVisibility="Auto" />
                    <Button
                        Command="{Binding ExecuteCommand}"
                        CommandParameter="保存"
                        Content="添加到待办" />
                </StackPanel>
            </md:DrawerHost.RightDrawerContent>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <StackPanel Margin="15,0,0,0" Orientation="Horizontal">
                    <!--  这里使用了md的占位符依赖属性  -->
                    <TextBox
                        Width="250"
                        Margin="0,4"
                        md:HintAssist.Hint="查找待办事项..."
                        md:TextFieldAssist.HasClearButton="True"
                        Text="{Binding Search, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <TextBox.InputBindings>
                            <KeyBinding
                                Key="Enter"
                                Command="{Binding ExecuteCommand}"
                                CommandParameter="查询" />
                        </TextBox.InputBindings>
                    </TextBox>
                    <TextBlock
                        Margin="10,0"
                        VerticalAlignment="Center"
                        Text="筛选 ：" />
                    <ComboBox SelectedIndex="{Binding SelectedStatus}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding ExecuteCommand}" CommandParameter="查询" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <ComboBoxItem>全部</ComboBoxItem>
                        <ComboBoxItem>待办</ComboBoxItem>
                        <ComboBoxItem>已完成</ComboBoxItem>
                    </ComboBox>
                </StackPanel>
                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                    <Button
                        Command="{Binding ExecuteCommand}"
                        CommandParameter="刷新"
                        Content="刷新" />
                    <Button
                        x:Name="AddToDoButton"
                        Margin="5,4"
                        HorizontalAlignment="Right"
                        Command="{Binding ExecuteCommand}"
                        CommandParameter="新增"
                        Content="+ 添加待办" />
                </StackPanel>
                <TextBlock
                    Grid.Row="1"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    FontSize="16"
                    Text="尝试添加一些待办事项,以便在此处查看它们"
                    Visibility="{Binding ToDoDtos.Count, Converter={StaticResource IntToVisibilityConverter}}" />
                <ScrollViewer Grid.Row="1">
                    <ItemsControl Grid.Row="1" ItemsSource="{Binding ToDoDtos}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel HorizontalAlignment="Center" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <!--  模板创建时的特效  -->
                                <md:TransitioningContent OpeningEffect="{md:TransitionEffect Kind=ExpandIn}">
                                    <Border Margin="5" CornerRadius="5">
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Status}" Value="false">
                                                        <Setter Property="Background" Value="#FF7CB384" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Status}" Value="true">
                                                        <Setter Property="Background" Value="#FF5F8ABB" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                        <Grid
                                            Width="215"
                                            MinHeight="180"
                                            MaxHeight="250"
                                            Margin="5">
                                            <!--  为Grid添加选择行为  -->
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="MouseLeftButtonUp">
                                                    <!--  向上查找ItemsControl的DataContext,绑定到 命令  -->
                                                    <!--  参数为当前点击的数据自身  -->
                                                    <i:InvokeCommandAction Command="{Binding DataContext.SelectedCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}" CommandParameter="{Binding}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="auto" />
                                                <RowDefinition />
                                            </Grid.RowDefinitions>

                                            <TextBlock
                                                FontSize="16"
                                                FontWeight="Bold"
                                                Text="{Binding Title}" />

                                            <md:PopupBox HorizontalAlignment="Right" VerticalAlignment="Top">
                                                <Button
                                                    Width="40"
                                                    Height="25"
                                                    Command="{Binding DataContext.DeleteCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}"
                                                    CommandParameter="{Binding}"
                                                    FontSize="14"
                                                    Style="{StaticResource MaterialDesignToolButton}">
                                                    删除
                                                </Button>
                                            </md:PopupBox>
                                            <TextBlock Grid.Row="1" Text="{Binding Content}" />

                                            <Canvas Grid.RowSpan="2" ClipToBounds="True">
                                                <Border
                                                    Canvas.Top="20"
                                                    Canvas.Right="-50"
                                                    Width="120"
                                                    Height="120"
                                                    Background="#FFFFFF"
                                                    CornerRadius="60"
                                                    Opacity="0.1" />
                                                <Border
                                                    Canvas.Top="80"
                                                    Canvas.Right="-10"
                                                    Width="120"
                                                    Height="120"
                                                    Background="#FFFFFF"
                                                    CornerRadius="60"
                                                    Opacity="0.1" />
                                            </Canvas>
                                        </Grid>
                                    </Border>
                                </md:TransitioningContent>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ScrollViewer>
            </Grid>
        </md:DrawerHost>
    </md:DialogHost>
</UserControl>
