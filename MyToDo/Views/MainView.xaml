<Window
    x:Class="MyToDo.Views.MainView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:ext="clr-namespace:MyToDo.Extensions"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:MyToDo"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
    Title="MainWindow"
    Width="960"
    Height="650"
    MinWidth="900"
    MinHeight="650"  DpiChanged="Window_DpiChanged"
    prism:ViewModelLocator.AutoWireViewModel="True"
    StateChanged="Window_StateChanged"
    Style="{StaticResource MaterialDesignWindow}"
    WindowStartupLocation="CenterScreen"
    mc:Ignorable="d">
    <Window.Resources /> 
    <WindowChrome.WindowChrome>
        <WindowChrome
            x:Name="windowChrome"
            CaptionHeight="60"
            CornerRadius="4"
            GlassFrameThickness="-1" 
            ResizeBorderThickness="8" />
    </WindowChrome.WindowChrome>
    <Grid x:Name="rootGrid">
        <materialDesign:DialogHost
            x:Name="MainViewDialogHost"
            DialogTheme="Inherit"
            Identifier="Root">

            <materialDesign:DrawerHost x:Name="drawerHost" IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}">
                <materialDesign:DrawerHost.LeftDrawerContent>
                    <DockPanel MinWidth="220">
                        <StackPanel>
                            <Image
                                Width="80"
                                Height="80"
                                Margin="0,20"
                                Source="/Images/user.jpg">
                                <Image.Clip>
                                    <EllipseGeometry
                                        Center="40,40"
                                        RadiusX="40"
                                        RadiusY="40" />
                                </Image.Clip>
                            </Image>
                            <TextBlock
                                Margin="0,10"
                                HorizontalAlignment="Center"
                                FontSize="20"
                                Text="{Binding UserName}" />
                            <ListBox
                                x:Name="menuBar"
                                ItemContainerStyle="{StaticResource MyListBoxItemStyle}"
                                ItemsSource="{Binding MenuBars}"
                                SelectedIndex="0">
                                <!--  第三方包扩展的触发器: 实现选中项改变后触发导航命令  -->
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="SelectionChanged">
                                        <i:InvokeCommandAction Command="{Binding NavigateCommand}" CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBox}}}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>

                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel
                                            Height="40"
                                            Margin="0,2"
                                            Background="Transparent"
                                            Orientation="Horizontal">
                                            <materialDesign:PackIcon
                                                Margin="15,0"
                                                VerticalAlignment="Center"
                                                Kind="{Binding Icon}" />
                                            <TextBlock
                                                Margin="10,0"
                                                VerticalAlignment="Center"
                                                FontSize="16"
                                                Text="{Binding Title}" />
                                        </StackPanel>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </StackPanel>
                    </DockPanel>
                </materialDesign:DrawerHost.LeftDrawerContent>

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <materialDesign:Snackbar
                        x:Name="Snackbar"
                        Panel.ZIndex="1"
                        MessageQueue="{materialDesign:MessageQueue}" />
                    <materialDesign:ColorZone
                        x:Name="ColorZone"
                        Height="{Binding ElementName=windowChrome, Path=CaptionHeight}"
                        Padding="15,0"
                        materialDesign:ElevationAssist.Elevation="Dp3"
                        Mode="PrimaryMid">
                        <DockPanel WindowChrome.IsHitTestVisibleInChrome="True">
                            <StackPanel Orientation="Horizontal" WindowChrome.IsHitTestVisibleInChrome="True">
                                <ToggleButton
                                    x:Name="MenuToggleButton"
                                    AutomationProperties.Name="HamburgerToggleButton"
                                    IsChecked="False"
                                    Style="{StaticResource MaterialDesignHamburgerToggleButton}" />
                                <Button
                                    Margin="24,0,0,0"
                                    materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"
                                    Command="{Binding GoBackCommand}"
                                    Content="{materialDesign:PackIcon Kind=ArrowLeft,
                                                                      Size=24}"
                                    Cursor="Hand"
                                    Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                                    Style="{StaticResource MaterialDesignToolButton}"
                                    ToolTip="Previous Item" />

                                <Button
                                    Margin="16,0,0,0"
                                    materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"
                                    Command="{Binding GoForwardCommand}"
                                    Content="{materialDesign:PackIcon Kind=ArrowRight,
                                                                      Size=24}"
                                    Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                                    Style="{StaticResource MaterialDesignToolButton}"
                                    ToolTip="Next Item" />

                                <TextBlock
                                    Margin="16,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    AutomationProperties.Name="Material Design In XAML Toolkit"
                                    FontSize="22"
                                    Text="笔记本" />
                                <!--<TextBlock Text="Window" />
                                <StackPanel>
                                    <TextBlock Margin="10,0" Text="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualHeight}" />
                                    <TextBlock Margin="10,0" Text="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth}" />
                                    <TextBlock Margin="10,0" Text="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Margin}" />
                                </StackPanel>
                                <TextBlock Text="WindowChrome" />
                                <StackPanel>
                                    <TextBlock Margin="10,0" Text="{Binding ElementName=windowChrome, Path=CaptionHeight}" />
                                    <TextBlock Margin="10,0" Text="{Binding ElementName=windowChrome, Path=NonClientFrameEdges}" />
                                    <TextBlock Margin="10,0" Text="{Binding ElementName=windowChrome, Path=GlassFrameThickness}" />
                                </StackPanel>
                                <TextBlock Text="RootGrid" />
                                <StackPanel>
                                    <TextBlock Margin="10,0" Text="{Binding ElementName=rootGrid, Path=ActualHeight}" />
                                    <TextBlock Margin="10,0" Text="{Binding ElementName=rootGrid, Path=ActualWidth}" />
                                    <TextBlock Margin="10,0" Text="{Binding ElementName=rootGrid, Path=Margin}" />
                                </StackPanel>-->
                            </StackPanel>
                            <StackPanel
                                HorizontalAlignment="Right"
                                DockPanel.Dock="Right"
                                Orientation="Horizontal"
                                WindowChrome.IsHitTestVisibleInChrome="True">
                                <Button
                                    x:Name="btnMin"
                                    Click="btnMin_Click"
                                    Content="—"
                                    Style="{StaticResource MaterialDesignFlatMidBgButton}" />
                                <Button
                                    x:Name="btnMax"
                                    Click="btnMax_Click"
                                    Content="☐"
                                    Style="{StaticResource MaterialDesignFlatMidBgButton}" />
                                <Button
                                    x:Name="btnClose"
                                    Click="btnClose_Click"
                                    Content="✕"
                                    Style="{StaticResource MaterialDesignFlatMidBgButton}" />
                            </StackPanel>
                            <materialDesign:PopupBox
                                HorizontalAlignment="Right"
                                DockPanel.Dock="Right"
                                WindowChrome.IsHitTestVisibleInChrome="True">
                                <materialDesign:PopupBox.ToggleContent>
                                    <Image
                                        x:Name="avatar"
                                        Width="25"
                                        Height="25"
                                        Margin="0,0,10,0" 
                                        Source="/Images/user.jpg">
                                        <Image.Clip>
                                            <EllipseGeometry
                                                Center="12.5,12.5"
                                                RadiusX="12.5"
                                                RadiusY="12.5" />
                                        </Image.Clip>
                                    </Image>
                                </materialDesign:PopupBox.ToggleContent>
                                <StackPanel>
                                    <Button Command="{Binding LogoutCommand}" Content="注销当前账户" />
                                </StackPanel>
                            </materialDesign:PopupBox>
                        </DockPanel>
                    </materialDesign:ColorZone>
                    <!--  在xaml中使用普通类的属性字段  -->
                    <ContentControl Grid.Row="1" prism:RegionManager.RegionName="{x:Static ext:PrismManager.MainViewRegionName}" />
                </Grid>
            </materialDesign:DrawerHost>
        </materialDesign:DialogHost>
    </Grid>
</Window>
